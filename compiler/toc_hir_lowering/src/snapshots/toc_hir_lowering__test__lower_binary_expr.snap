---
source: compiler/toc_hir_lowering/src/test.rs
expression: "a := a + a"

---
database:
stmt:
Idx::<Stmt>(0) (Span { file: None, range: 0..10 }): Assign(Assign { lhs: Idx::<Expr>(0), op: Spanned(None, Span { file: None, range: 2..4 }), rhs: Idx::<Expr>(3) })

expr:
Idx::<Expr>(0) (Span { file: None, range: 0..1 }): Name(Name(UseId(DefId(0), 0)))
Idx::<Expr>(1) (Span { file: None, range: 5..6 }): Name(Name(UseId(DefId(0), 1)))
Idx::<Expr>(2) (Span { file: None, range: 9..10 }): Name(Name(UseId(DefId(0), 2)))
Idx::<Expr>(3) (Span { file: None, range: 5..10 }): Binary(Binary { lhs: Idx::<Expr>(1), op: Spanned(Add, Span { file: None, range: 7..8 }), rhs: Idx::<Expr>(2) })

ty:

root stmts:
[Idx::<Stmt>(0)]
symtab:
DefId(0): (Span { file: None, range: 0..1 }, Symbol { name: "a", kind: Undeclared, is_pervasive: false, def_id: DefId(0), next_use: 3 })
UseId(DefId(0), 0): Span { file: None, range: 0..1 }
UseId(DefId(0), 1): Span { file: None, range: 5..6 }
UseId(DefId(0), 2): Span { file: None, range: 9..10 }

